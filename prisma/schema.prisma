// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Example {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String    @id
  name      String
  email     String    @unique
  phone     BigInt    @unique
  password  String
  user_type String
  accounts  Account[]
  sessions  Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model BasicUnits {
  symbol     String @unique
  name       String @unique
}

model PackagingType {
  name       String @unique
  
}

model Colors {
  color_name String @unique @id
  rgb_code   String
}

model PackagingUnits {
  name       String  @unique
  packaging  String
  unit       String
  unit_value Decimal
  @@id([name, packaging])
}

model ComplexPackagingUnits{
  name String @unique @id
  unit_packaging String
  unit Int
  packaging String
}

model HsnCode {
  code        Int     @id @unique
  description String
  brand       Brand[]
}

model Categories {
  name  String  @unique @id
  code  String @unique
  brand Brand[]
}

model Brand {
  brand_name     String     @unique @id
  hsn_code       HsnCode    @relation(fields: [hsnCode_id], references: [code])
  hsnCode_id     Int
  categories     Categories @relation(fields: [categoriesName], references: [name])
  categoriesName String
}

model BrandPackagingType{
  brand_name String
  packaging String
  @@id([brand_name, packaging])
}
model OderableUnits{
  list_name String @unique @id
}

model OderableUnitsDetails{
  brand_name String
  packaging String
  list_name String
  @@id([brand_name, packaging, list_name])
}

model GroupInfo{
  brand_name String
  group_name String
  group_code String
  @@id([brand_name, group_name, group_code])

}

model GroupPricing{
  brand_name String
  group_name String
  group_code String
  color_name String
  rgb_code String
  @@unique([brand_name, group_name, group_code, color_name])
}
model OderableColors{
  list_name String @unique @id
}

model OderableColorsDetails{
  brand_name String
  color_name String
  list_name String
  @@unique([brand_name, color_name, list_name])
}

model PriceListName{
  price_list_name String @unique @id
}

model Salesman{
  name String 
  phone String @unique @id
  company String
  orderable_unit String 
  orderable_color String 
}

model UserOrderableLocation{
  name String
  phone String
  location String
  @@id([phone, location])
}

model UserAcessLocation{
  name String
  phone String
  location String
  @@id([phone, location])
}

model InterCompany{
  name String  @unique @id
  gst String
  type String
  address String
  pin Int
  city String
  phone BigInt
  bill String
  price_list_name String
}

model Stock{
  brand_name String
  color_name String
  packaging String
  current_stock Int
  location String
  @@unique([brand_name, color_name, packaging,location])
}

model StockLedger{
  id BigInt @id @default(autoincrement())
  brand_name String
  color_name String
  client_name String
  packaging String
  notes String
  location String
  date String
  open_stock Int
  added Int
  closing Int
  executed Int
}

model Pricing{
  brand_name String
  group_name String
  list_name String
  packaging String
  price Float
  @@unique([brand_name,group_name,packaging,list_name])
}

model Location{
  location String @id
}

model Client{
  type String
  legal_name String
  unique_name String @id
  distributor String
  sales_representative String
  code String
  gst String
  trade_license String
  in_india Boolean 
  address String
  location String
  state String
  district String
  phone_primary String
  phone_secondary String
  email String
  is_cheque Boolean
  account String
  ifsc String 
  bank_branch String
  pin_code String
  price_list_name String 
  primary_company String 
  is_active Boolean 
  gst_validity DateTime 
  max_credit_days Int 
  max_credit_amount Int  
}

model ClientSupervisors{
  uniqe_name String
  sales_supervisor String
  @@id([uniqe_name,sales_supervisor])
}

model ClientSecondaryCompany{
  unique_name String
  company String
  @@id([unique_name, company])
}

model Order{
  id String @id
  client_name String 
  salesman_name String
  company String 
}

model OrderDetails{
  id String @db.VarChar(100)
  brand_name String @db.VarChar(50)
  color_name String @db.VarChar(50)
  packaging_type String @db.VarChar(50)
  amount Decimal
  total_qty Decimal
  executed_qty Decimal
  cancelled_qty Decimal
  client_name String @db.VarChar(50)
  salesman_name String @db.VarChar(50)
  company String
  location String
  date String @db.VarChar(50)
  status String
  @@id([id, salesman_name, client_name, date,location,brand_name, color_name, packaging_type])
}